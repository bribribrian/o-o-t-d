{
  "name": "stylidex",
  "version": "1.0.0",
  "description": "a MERN stack style generator ## Overview Stylidex is a outfit generator that produces possible outfits for the user to choose from which are assembled based on clothing items withing the users own personal wardrobe. These outfits can be compiled using a number of factors including, but not limited to: - date of last usage - current weather/seasonal conditions - coordiation with other currently chosen items ## Functionality The user will login to their account at which point they will then have access to their personal database of clothing items. The user will be able to add/remove items from their wardrobe. Upon login a new outfit will be generated based on the seasonal conditions as well as based on items that have least recently been used. The user can choose to either accept this suggestion as the one which they will wear, or generate a new suggestion. If the user wishes to keep one or more items from the previous suggestion, only the items they wish to swap out will generate new suggestions.  ## MVPs - User will be able to add/remove clothing items from their collection with parameters such as season, type of item (pants/jacket/etc), color, etc. These parameter will give Stylidex insight as to how to match items together to make up an outfit - Users will be geo-located to give insight into season/weather to appropriately match outfits to the current weather conditions - Clothing items will be time stammped on their last usage to give users insight as to when they were last worn and whether they should be used or removed from the user's wardrobe. - Clothing items will keep record of how well they match other items based on users feedback - Search feature for user to find what items they have in their wardrobe ## Technologies #### Backend: Node, Express, MongoDB #### Frontend: React and React Native with Redux ## Team Members & Work Breakdown David Campuzano, Peter Kim, Brian Klein, Will Marino",
  "main": "index.js",
  "scripts": {
    "dev": "concurrently \"npm run server\" \"npm run frontend\"",
    "frontend": "npm start --prefix frontend",
    "frontend-install": "npm install --prefix frontend",
    "server:debug": "nodemon --inspect app.js",
    "server": "nodemon app.js",
    "start": "node app.js",
    "heroku-postbuild": "NPM_CONFIG_PRODUCTION=false npm install --prefix frontend && npm run build --prefix frontend"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bribribrian/Stylidex.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/bribribrian/Stylidex/issues"
  },
  "homepage": "https://github.com/bribribrian/Stylidex#readme",
  "dependencies": {
    "aws-sdk": "^2.596.0",
    "bcryptjs": "^2.4.3",
    "body-parser": "^1.20.1",
    "concurrently": "^5.0.2",
    "express": "^4.18.2",
    "jshint": "^2.11.0",
    "jsonwebtoken": "^8.5.1",
    "mongoose": "^5.8.3",
    "multer": "^1.4.2",
    "multer-s3": "^2.9.0",
    "passport": "^0.4.1",
    "passport-jwt": "^4.0.0",
    "validator": "^12.1.0"
  },
  "devDependencies": {
    "nodemon": "^2.0.2"
  }
}
